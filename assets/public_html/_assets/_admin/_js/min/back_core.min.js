/*!
 * pickadate.js v3.6.4, 2019/05/25
 * By Amsul, http://amsul.ca
 * Hosted on http://amsul.github.io/pickadate.js
 * Licensed under MIT
 */
!function(a){"function"==typeof define&&define.amd?define("picker",["jquery"],a):"object"==typeof exports?module.exports=a(require("jquery")):"object"==typeof window?window.Picker=a(jQuery):this.Picker=a(jQuery)}(function(a){function b(g,h,j,l){function n(){return b._.node("div",b._.node("div",b._.node("div",b._.node("div",B.component.nodes(w.open),y.box),y.wrap),y.frame),y.holder,'tabindex="-1"')}function o(){z.data(h,B).addClass(y.input).val(z.data("value")?B.get("select",x.format):g.value).on("focus."+w.id+" click."+w.id,function(a){a.preventDefault(),B.open()}).on("mousedown",function(){w.handlingOpen=!0;var b=function(){setTimeout(function(){a(document).off("mouseup",b),w.handlingOpen=!1},0)};a(document).on("mouseup",b)}),x.editable||z.on("keydown."+w.id,u),f(g,{haspopup:!0,expanded:!1,readonly:!1,owns:g.id+"_root"})}function p(){f(B.$root[0],"hidden",!0)}function q(){B.$holder.on({keydown:u,"focus.toOpen":t,blur:function(){z.removeClass(y.target)},focusin:function(a){B.$root.removeClass(y.focused),a.stopPropagation()},"mousedown click":function(b){var c=e(b,g);c!=B.$holder[0]&&(b.stopPropagation(),"mousedown"!=b.type||a(c).is("input, select, textarea, button, option")||(b.preventDefault(),B.$holder.eq(0).focus()))}}).on("click","[data-pick], [data-nav], [data-clear], [data-close]",function(){var b=a(this),c=b.data(),d=b.hasClass(y.navDisabled)||b.hasClass(y.disabled),e=i();e=e&&(e.type||e.href?e:null),(d||e&&!a.contains(B.$root[0],e))&&B.$holder.eq(0).focus(),!d&&c.nav?B.set("highlight",B.component.item.highlight,{nav:c.nav}):!d&&"pick"in c?(B.set("select",c.pick),x.closeOnSelect&&B.close(!0)):c.clear?(B.clear(),x.closeOnClear&&B.close(!0)):c.close&&B.close(!0)})}function r(){var b;!0===x.hiddenName?(b=g.name,g.name=""):(b=["string"==typeof x.hiddenPrefix?x.hiddenPrefix:"","string"==typeof x.hiddenSuffix?x.hiddenSuffix:"_submit"],b=b[0]+g.name+b[1]),B._hidden=a('<input type=hidden name="'+b+'"'+(z.data("value")||g.value?' value="'+B.get("select",x.formatSubmit)+'"':"")+">")[0],z.on("change."+w.id,function(){B._hidden.value=g.value?B.get("select",x.formatSubmit):""})}function s(){v&&m?B.$holder.find("."+y.frame).one("transitionend",function(){B.$holder.eq(0).focus()}):setTimeout(function(){B.$holder.eq(0).focus()},0)}function t(a){a.stopPropagation(),z.addClass(y.target),B.$root.addClass(y.focused),B.open()}function u(a){var b=a.keyCode,c=/^(8|46)$/.test(b);if(27==b)return B.close(!0),!1;(32==b||c||!w.open&&B.component.key[b])&&(a.preventDefault(),a.stopPropagation(),c?B.clear().close():B.open())}if(!g)return b;var v=!1,w={id:g.id||"P"+Math.abs(~~(Math.random()*new Date)),handlingOpen:!1},x=j?a.extend(!0,{},j.defaults,l):l||{},y=a.extend({},b.klasses(),x.klass),z=a(g),A=function(){return this.start()},B=A.prototype={constructor:A,$node:z,start:function(){return w&&w.start?B:(w.methods={},w.start=!0,w.open=!1,w.type=g.type,g.autofocus=g==i(),g.readOnly=!x.editable,g.id=g.id||w.id,"text"!=g.type&&(g.type="text"),B.component=new j(B,x),B.$root=a('<div class="'+y.picker+'" id="'+g.id+'_root" />'),p(),B.$holder=a(n()).appendTo(B.$root),q(),x.formatSubmit&&r(),o(),x.containerHidden?a(x.containerHidden).append(B._hidden):z.after(B._hidden),x.container?a(x.container).append(B.$root):z.after(B.$root),B.on({start:B.component.onStart,render:B.component.onRender,stop:B.component.onStop,open:B.component.onOpen,close:B.component.onClose,set:B.component.onSet}).on({start:x.onStart,render:x.onRender,stop:x.onStop,open:x.onOpen,close:x.onClose,set:x.onSet}),v=c(B.$holder[0]),g.autofocus&&B.open(),B.trigger("start").trigger("render"))},render:function(b){return b?(B.$holder=a(n()),q(),B.$root.html(B.$holder)):B.$root.find("."+y.box).html(B.component.nodes(w.open)),B.trigger("render")},stop:function(){return w.start?(B.close(),B._hidden&&B._hidden.parentNode.removeChild(B._hidden),B.$root.remove(),z.removeClass(y.input).removeData(h),setTimeout(function(){z.off("."+w.id)},0),g.type=w.type,g.readOnly=!1,B.trigger("stop"),w.methods={},w.start=!1,B):B},open:function(c){return w.open?B:(z.addClass(y.active),f(g,"expanded",!0),setTimeout(function(){B.$root.addClass(y.opened),f(B.$root[0],"hidden",!1)},0),!1!==c&&(w.open=!0,v&&a("body").css("overflow","hidden").css("padding-right","+="+d()),s(),k.on("click."+w.id+" focusin."+w.id,function(a){if(!w.handlingOpen){var b=e(a,g);a.isSimulated||b==g||b==document||3==a.which||B.close(b===B.$holder[0])}}).on("keydown."+w.id,function(c){var d=c.keyCode,f=B.component.key[d],h=e(c,g);27==d?B.close(!0):h!=B.$holder[0]||!f&&13!=d?a.contains(B.$root[0],h)&&13==d&&(c.preventDefault(),h.click()):(c.preventDefault(),f?b._.trigger(B.component.key.go,B,[b._.trigger(f)]):B.$root.find("."+y.highlighted).hasClass(y.disabled)||(B.set("select",B.component.item.highlight),x.closeOnSelect&&B.close(!0)))})),B.trigger("open"))},close:function(b){return b&&(x.editable?g.focus():(B.$holder.off("focus.toOpen").focus(),setTimeout(function(){B.$holder.on("focus.toOpen",t)},0))),z.removeClass(y.active),f(g,"expanded",!1),setTimeout(function(){B.$root.removeClass(y.opened+" "+y.focused),f(B.$root[0],"hidden",!0)},0),w.open?(w.open=!1,v&&a("body").css("overflow","").css("padding-right","-="+d()),k.off("."+w.id),B.trigger("close")):B},clear:function(a){return B.set("clear",null,a)},set:function(b,c,d){var e,f,g=a.isPlainObject(b),h=g?b:{};if(d=g&&a.isPlainObject(c)?c:d||{},b){g||(h[b]=c);for(e in h)f=h[e],e in B.component.item&&(void 0===f&&(f=null),B.component.set(e,f,d)),"select"!=e&&"clear"!=e||!x.updateInput||z.val("clear"==e?"":B.get(e,x.format)).trigger("change");B.render()}return d.muted?B:B.trigger("set",h)},get:function(a,c){if(a=a||"value",null!=w[a])return w[a];if("valueSubmit"==a){if(B._hidden)return B._hidden.value;a="value"}if("value"==a)return g.value;if(a in B.component.item){if("string"==typeof c){var d=B.component.get(a);return d?b._.trigger(B.component.formats.toString,B.component,[c,d]):""}return B.component.get(a)}},on:function(b,c,d){var e,f,g=a.isPlainObject(b),h=g?b:{};if(b){g||(h[b]=c);for(e in h)f=h[e],d&&(e="_"+e),w.methods[e]=w.methods[e]||[],w.methods[e].push(f)}return B},off:function(){var a,b,c=arguments;for(a=0,namesCount=c.length;a<namesCount;a+=1)(b=c[a])in w.methods&&delete w.methods[b];return B},trigger:function(a,c){var d=function(a){var d=w.methods[a];d&&d.map(function(a){b._.trigger(a,B,[c])})};return d("_"+a),d(a),B}};return new A}function c(a){var b,c="position";return a.currentStyle?b=a.currentStyle[c]:window.getComputedStyle&&(b=getComputedStyle(a)[c]),"fixed"==b}function d(){if(l.height()<=j.height())return 0;var b=a('<div style="visibility:hidden;width:100px" />').appendTo("body"),c=b[0].offsetWidth;b.css("overflow","scroll");var d=a('<div style="width:100%" />').appendTo(b),e=d[0].offsetWidth;return b.remove(),c-e}function e(a,b){var c=[];return a.path&&(c=a.path),a.originalEvent&&a.originalEvent.path&&(c=a.originalEvent.path),c&&c.length>0?b&&c.indexOf(b)>=0?b:c[0]:a.target}function f(b,c,d){if(a.isPlainObject(c))for(var e in c)g(b,e,c[e]);else g(b,c,d)}function g(a,b,c){a.setAttribute(("role"==b?"":"aria-")+b,c)}function h(b,c){a.isPlainObject(b)||(b={attribute:c}),c="";for(var d in b){var e=("role"==d?"":"aria-")+d;c+=null==b[d]?"":e+'="'+b[d]+'"'}return c}function i(){try{return document.activeElement}catch(a){}}var j=a(window),k=a(document),l=a(document.documentElement),m=null!=document.documentElement.style.transition;return b.klasses=function(a){return a=a||"picker",{picker:a,opened:a+"--opened",focused:a+"--focused",input:a+"__input",active:a+"__input--active",target:a+"__input--target",holder:a+"__holder",frame:a+"__frame",wrap:a+"__wrap",box:a+"__box"}},b._={group:function(a){for(var c,d="",e=b._.trigger(a.min,a);e<=b._.trigger(a.max,a,[e]);e+=a.i)c=b._.trigger(a.item,a,[e]),d+=b._.node(a.node,c[0],c[1],c[2]);return d},node:function(b,c,d,e){return c?(c=a.isArray(c)?c.join(""):c,d=d?' class="'+d+'"':"",e=e?" "+e:"","<"+b+d+e+">"+c+"</"+b+">"):""},lead:function(a){return(a<10?"0":"")+a},trigger:function(a,b,c){return"function"==typeof a?a.apply(b,c||[]):a},digits:function(a){return/\d/.test(a[1])?2:1},isDate:function(a){return{}.toString.call(a).indexOf("Date")>-1&&this.isInteger(a.getDate())},isInteger:function(a){return{}.toString.call(a).indexOf("Number")>-1&&a%1==0},ariaAttr:h},b.extend=function(c,d){a.fn[c]=function(e,f){var g=this.data(c);return"picker"==e?g:g&&"string"==typeof e?b._.trigger(g[e],g,[f]):this.each(function(){a(this).data(c)||new b(this,c,d,e)})},a.fn[c].defaults=d.defaults},b});
/*!
 * Date picker for pickadate.js v3.6.4
 * http://amsul.github.io/pickadate.js/date.htm
 */
!function(a){"function"==typeof define&&define.amd?define(["./picker","jquery"],a):"object"==typeof exports?module.exports=a(require("./picker.js"),require("jquery")):a(Picker,jQuery)}(function(a,b){function c(a,b){var c=this,d=a.$node[0],e=d.value,f=a.$node.data("value"),g=f||e,h=f?b.formatSubmit:b.format,i=function(){return d.currentStyle?"rtl"==d.currentStyle.direction:"rtl"==getComputedStyle(a.$root[0]).direction};c.settings=b,c.$node=a.$node,c.queue={min:"measure create",max:"measure create",now:"now create",select:"parse create validate",highlight:"parse navigate create validate",view:"parse create validate viewset",disable:"deactivate",enable:"activate"},c.item={},c.item.clear=null,c.item.disable=(b.disable||[]).slice(0),c.item.enable=-function(a){return!0===a[0]?a.shift():-1}(c.item.disable),c.set("min",b.min).set("max",b.max).set("now"),g?c.set("select",g,{format:h,defaultValue:!0}):c.set("select",null).set("highlight",c.item.now),c.key={40:7,38:-7,39:function(){return i()?-1:1},37:function(){return i()?1:-1},go:function(a){var b=c.item.highlight,d=new Date(b.year,b.month,b.date+a);c.set("highlight",d,{interval:a}),this.render()}},a.on("render",function(){a.$root.find("."+b.klass.selectMonth).on("change",function(){var c=this.value;c&&(a.set("highlight",[a.get("view").year,c,a.get("highlight").date]),a.$root.find("."+b.klass.selectMonth).trigger("focus"))}),a.$root.find("."+b.klass.selectYear).on("change",function(){var c=this.value;c&&(a.set("highlight",[c,a.get("view").month,a.get("highlight").date]),a.$root.find("."+b.klass.selectYear).trigger("focus"))})},1).on("open",function(){var d="";c.disabled(c.get("now"))&&(d=":not(."+b.klass.buttonToday+")"),a.$root.find("button"+d+", select").attr("disabled",!1)},1).on("close",function(){a.$root.find("button, select").attr("disabled",!0)},1)}var d=7,e=a._;c.prototype.set=function(a,b,c){var d=this,e=d.item;return null===b?("clear"==a&&(a="select"),e[a]=b,d):(e["enable"==a?"disable":"flip"==a?"enable":a]=d.queue[a].split(" ").map(function(e){return b=d[e](a,b,c)}).pop(),"select"==a?d.set("highlight",e.select,c):"highlight"==a?d.set("view",e.highlight,c):a.match(/^(flip|min|max|disable|enable)$/)&&(e.select&&d.disabled(e.select)&&d.set("select",e.select,c),e.highlight&&d.disabled(e.highlight)&&d.set("highlight",e.highlight,c)),d)},c.prototype.get=function(a){return this.item[a]},c.prototype.create=function(a,c,d){var f,g=this;return c=void 0===c?a:c,c==-1/0||c==1/0?f=c:b.isPlainObject(c)&&e.isInteger(c.pick)?c=c.obj:b.isArray(c)?(c=new Date(c[0],c[1],c[2]),c=e.isDate(c)?c:g.create().obj):c=e.isInteger(c)||e.isDate(c)?g.normalize(new Date(c),d):g.now(a,c,d),{year:f||c.getFullYear(),month:f||c.getMonth(),date:f||c.getDate(),day:f||c.getDay(),obj:f||c,pick:f||c.getTime()}},c.prototype.createRange=function(a,c){var d=this,f=function(a){return!0===a||b.isArray(a)||e.isDate(a)?d.create(a):a};return e.isInteger(a)||(a=f(a)),e.isInteger(c)||(c=f(c)),e.isInteger(a)&&b.isPlainObject(c)?a=[c.year,c.month,c.date+a]:e.isInteger(c)&&b.isPlainObject(a)&&(c=[a.year,a.month,a.date+c]),{from:f(a),to:f(c)}},c.prototype.withinRange=function(a,b){return a=this.createRange(a.from,a.to),b.pick>=a.from.pick&&b.pick<=a.to.pick},c.prototype.overlapRanges=function(a,b){var c=this;return a=c.createRange(a.from,a.to),b=c.createRange(b.from,b.to),c.withinRange(a,b.from)||c.withinRange(a,b.to)||c.withinRange(b,a.from)||c.withinRange(b,a.to)},c.prototype.now=function(a,b,c){return b=new Date,c&&c.rel&&b.setDate(b.getDate()+c.rel),this.normalize(b,c)},c.prototype.navigate=function(a,c,d){var e,f,g,h,i=b.isArray(c),j=b.isPlainObject(c),k=this.item.view;if(i||j){for(j?(f=c.year,g=c.month,h=c.date):(f=+c[0],g=+c[1],h=+c[2]),d&&d.nav&&k&&k.month!==g&&(f=k.year,g=k.month),e=new Date(f,g+(d&&d.nav?d.nav:0),1),f=e.getFullYear(),g=e.getMonth();new Date(f,g,h).getMonth()!==g;)h-=1;c=[f,g,h]}return c},c.prototype.normalize=function(a){return a.setHours(0,0,0,0),a},c.prototype.measure=function(a,b){var c=this;return e.isInteger(b)?b=c.now(a,b,{rel:b}):b?"string"==typeof b&&(b=c.parse(a,b)):b="min"==a?-1/0:1/0,b},c.prototype.viewset=function(a,b){return this.create([b.year,b.month,1])},c.prototype.validate=function(a,c,d){var f,g,h,i,j=this,k=c,l=d&&d.interval?d.interval:1,m=-1===j.item.enable,n=j.item.min,o=j.item.max,p=m&&j.item.disable.filter(function(a){if(b.isArray(a)){var d=j.create(a).pick;d<c.pick?f=!0:d>c.pick&&(g=!0)}return e.isInteger(a)}).length;if((!d||!d.nav&&!d.defaultValue)&&(!m&&j.disabled(c)||m&&j.disabled(c)&&(p||f||g)||!m&&(c.pick<=n.pick||c.pick>=o.pick)))for(m&&!p&&(!g&&l>0||!f&&l<0)&&(l*=-1);j.disabled(c)&&(Math.abs(l)>1&&(c.month<k.month||c.month>k.month)&&(c=k,l=l>0?1:-1),c.pick<=n.pick?(h=!0,l=1,c=j.create([n.year,n.month,n.date+(c.pick===n.pick?0:-1)])):c.pick>=o.pick&&(i=!0,l=-1,c=j.create([o.year,o.month,o.date+(c.pick===o.pick?0:1)])),!h||!i);)c=j.create([c.year,c.month,c.date+l]);return c},c.prototype.disabled=function(a){var c=this,d=c.item.disable.filter(function(d){return e.isInteger(d)?a.day===(c.settings.firstDay?d:d-1)%7:b.isArray(d)||e.isDate(d)?a.pick===c.create(d).pick:b.isPlainObject(d)?c.withinRange(d,a):void 0});return d=d.length&&!d.filter(function(a){return b.isArray(a)&&"inverted"==a[3]||b.isPlainObject(a)&&a.inverted}).length,-1===c.item.enable?!d:d||a.pick<c.item.min.pick||a.pick>c.item.max.pick},c.prototype.parse=function(a,b,c){var d=this,f={};return b&&"string"==typeof b?(c&&c.format||(c=c||{},c.format=d.settings.format),d.formats.toArray(c.format).map(function(a){var c=d.formats[a],g=c?e.trigger(c,d,[b,f]):a.replace(/^!/,"").length;c&&(f[a]=b.substr(0,g)),b=b.substr(g)}),[f.yyyy||f.yy,+(f.mm||f.m)-1,f.dd||f.d]):b},c.prototype.formats=function(){function a(a,b,c){var d=a.match(/[^\x00-\x7F]+|\w+/)[0];return c.mm||c.m||(c.m=b.indexOf(d)+1),d.length}function b(a){return a.match(/\w+/)[0].length}return{d:function(a,b){return a?e.digits(a):b.date},dd:function(a,b){return a?2:e.lead(b.date)},ddd:function(a,c){return a?b(a):this.settings.weekdaysShort[c.day]},dddd:function(a,c){return a?b(a):this.settings.weekdaysFull[c.day]},m:function(a,b){return a?e.digits(a):b.month+1},mm:function(a,b){return a?2:e.lead(b.month+1)},mmm:function(b,c){var d=this.settings.monthsShort;return b?a(b,d,c):d[c.month]},mmmm:function(b,c){var d=this.settings.monthsFull;return b?a(b,d,c):d[c.month]},yy:function(a,b){return a?2:(""+b.year).slice(2)},yyyy:function(a,b){return a?4:b.year},toArray:function(a){return a.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g)},toString:function(a,b){var c=this;return c.formats.toArray(a).map(function(a){return e.trigger(c.formats[a],c,[0,b])||a.replace(/^!/,"")}).join("")}}}(),c.prototype.isDateExact=function(a,c){var d=this;return e.isInteger(a)&&e.isInteger(c)||"boolean"==typeof a&&"boolean"==typeof c?a===c:(e.isDate(a)||b.isArray(a))&&(e.isDate(c)||b.isArray(c))?d.create(a).pick===d.create(c).pick:!(!b.isPlainObject(a)||!b.isPlainObject(c))&&d.isDateExact(a.from,c.from)&&d.isDateExact(a.to,c.to)},c.prototype.isDateOverlap=function(a,c){var d=this,f=d.settings.firstDay?1:0;return e.isInteger(a)&&(e.isDate(c)||b.isArray(c))?(a=a%7+f)===d.create(c).day+1:e.isInteger(c)&&(e.isDate(a)||b.isArray(a))?(c=c%7+f)===d.create(a).day+1:!(!b.isPlainObject(a)||!b.isPlainObject(c))&&d.overlapRanges(a,c)},c.prototype.flipEnable=function(a){var b=this.item;b.enable=a||(-1==b.enable?1:-1)},c.prototype.deactivate=function(a,c){var d=this,f=d.item.disable.slice(0);return"flip"==c?d.flipEnable():!1===c?(d.flipEnable(1),f=[]):!0===c?(d.flipEnable(-1),f=[]):c.map(function(a){for(var c,g=0;g<f.length;g+=1)if(d.isDateExact(a,f[g])){c=!0;break}c||(e.isInteger(a)||e.isDate(a)||b.isArray(a)||b.isPlainObject(a)&&a.from&&a.to)&&f.push(a)}),f},c.prototype.activate=function(a,c){var d=this,f=d.item.disable,g=f.length;return"flip"==c?d.flipEnable():!0===c?(d.flipEnable(1),f=[]):!1===c?(d.flipEnable(-1),f=[]):c.map(function(a){var c,h,i,j;for(i=0;i<g;i+=1){if(h=f[i],d.isDateExact(h,a)){c=f[i]=null,j=!0;break}if(d.isDateOverlap(h,a)){b.isPlainObject(a)?(a.inverted=!0,c=a):b.isArray(a)?(c=a,c[3]||c.push("inverted")):e.isDate(a)&&(c=[a.getFullYear(),a.getMonth(),a.getDate(),"inverted"]);break}}if(c)for(i=0;i<g;i+=1)if(d.isDateExact(f[i],a)){f[i]=null;break}if(j)for(i=0;i<g;i+=1)if(d.isDateOverlap(f[i],a)){f[i]=null;break}c&&f.push(c)}),f.filter(function(a){return null!=a})},c.prototype.nodes=function(a){var b=this,c=b.settings,f=b.item,g=f.now,h=f.select,i=f.highlight,j=f.view,k=f.disable,l=f.min,m=f.max,n=function(a,b){return c.firstDay&&(a.push(a.shift()),b.push(b.shift())),e.node("thead",e.node("tr",e.group({min:0,max:d-1,i:1,node:"th",item:function(d){return[a[d],c.klass.weekdays,'scope=col title="'+b[d]+'"']}})))}((c.showWeekdaysFull?c.weekdaysFull:c.weekdaysShort).slice(0),c.weekdaysFull.slice(0)),o=function(a){return e.node("div"," ",c.klass["nav"+(a?"Next":"Prev")]+(a&&j.year>=m.year&&j.month>=m.month||!a&&j.year<=l.year&&j.month<=l.month?" "+c.klass.navDisabled:""),"data-nav="+(a||-1)+" "+e.ariaAttr({role:"button",controls:b.$node[0].id+"_table"})+' title="'+(a?c.labelMonthNext:c.labelMonthPrev)+'"')},p=function(){var d=c.showMonthsShort?c.monthsShort:c.monthsFull;return c.selectMonths?e.node("select",e.group({min:0,max:11,i:1,node:"option",item:function(a){return[d[a],0,"value="+a+(j.month==a?" selected":"")+(j.year==l.year&&a<l.month||j.year==m.year&&a>m.month?" disabled":"")]}}),c.klass.selectMonth,(a?"":"disabled")+" "+e.ariaAttr({controls:b.$node[0].id+"_table"})+' title="'+c.labelMonthSelect+'"'):e.node("div",d[j.month],c.klass.month)},q=function(){var d=j.year,f=!0===c.selectYears?5:~~(c.selectYears/2);if(f){var g=l.year,h=m.year,i=d-f,k=d+f;if(g>i&&(k+=g-i,i=g),h<k){var n=i-g,o=k-h;i-=n>o?o:n,k=h}return e.node("select",e.group({min:i,max:k,i:1,node:"option",item:function(a){return[a,0,"value="+a+(d==a?" selected":"")]}}),c.klass.selectYear,(a?"":"disabled")+" "+e.ariaAttr({controls:b.$node[0].id+"_table"})+' title="'+c.labelYearSelect+'"')}return e.node("div",d,c.klass.year)};return e.node("div",(c.selectYears?q()+p():p()+q())+o()+o(1),c.klass.header)+e.node("table",n+e.node("tbody",e.group({min:0,max:5,i:1,node:"tr",item:function(a){var f=c.firstDay&&0===b.create([j.year,j.month,1]).day?-7:0;return[e.group({min:d*a-j.day+f+1,max:function(){return this.min+d-1},i:1,node:"td",item:function(a){a=b.create([j.year,j.month,a+(c.firstDay?1:0)]);var d=h&&h.pick==a.pick,f=i&&i.pick==a.pick,n=k&&b.disabled(a)||a.pick<l.pick||a.pick>m.pick,o=e.trigger(b.formats.toString,b,[c.format,a]);return[e.node("div",a.date,function(b){return b.push(j.month==a.month?c.klass.infocus:c.klass.outfocus),g.pick==a.pick&&b.push(c.klass.now),d&&b.push(c.klass.selected),f&&b.push(c.klass.highlighted),n&&b.push(c.klass.disabled),b.join(" ")}([c.klass.day]),"data-pick="+a.pick+" "+e.ariaAttr({role:"gridcell",label:o,selected:!(!d||b.$node.val()!==o)||null,activedescendant:!!f||null,disabled:!!n||null})),"",e.ariaAttr({role:"presentation"})]}})]}})),c.klass.table,'id="'+b.$node[0].id+'_table" '+e.ariaAttr({role:"grid",controls:b.$node[0].id,readonly:!0}))+e.node("div",e.node("button",c.today,c.klass.buttonToday,"type=button data-pick="+g.pick+(a&&!b.disabled(g)?"":" disabled")+" "+e.ariaAttr({controls:b.$node[0].id}))+e.node("button",c.clear,c.klass.buttonClear,"type=button data-clear=1"+(a?"":" disabled")+" "+e.ariaAttr({controls:b.$node[0].id}))+e.node("button",c.close,c.klass.buttonClose,"type=button data-close=true "+(a?"":" disabled")+" "+e.ariaAttr({controls:b.$node[0].id})),c.klass.footer)},c.defaults=function(a){return{labelMonthNext:"Next month",labelMonthPrev:"Previous month",labelMonthSelect:"Select a month",labelYearSelect:"Select a year",monthsFull:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],weekdaysFull:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],today:"Today",clear:"Clear",close:"Close",closeOnSelect:!0,closeOnClear:!0,updateInput:!0,format:"d mmmm, yyyy",klass:{table:a+"table",header:a+"header",navPrev:a+"nav--prev",navNext:a+"nav--next",navDisabled:a+"nav--disabled",month:a+"month",year:a+"year",selectMonth:a+"select--month",selectYear:a+"select--year",weekdays:a+"weekday",day:a+"day",disabled:a+"day--disabled",selected:a+"day--selected",highlighted:a+"day--highlighted",now:a+"day--today",infocus:a+"day--infocus",outfocus:a+"day--outfocus",footer:a+"footer",buttonClear:a+"button--clear",buttonToday:a+"button--today",buttonClose:a+"button--close"}}}(a.klasses().picker+"__"),a.extend("pickadate",c)});
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD
		define(['jquery'], factory);
	} else if (typeof exports === 'object') {
		// CommonJS
		factory(require('jquery'));
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function ($) {

	var pluses = /\+/g;

	function encode(s) {
		return config.raw ? s : encodeURIComponent(s);
	}

	function decode(s) {
		return config.raw ? s : decodeURIComponent(s);
	}

	function stringifyCookieValue(value) {
		return encode(config.json ? JSON.stringify(value) : String(value));
	}

	function parseCookieValue(s) {
		if (s.indexOf('"') === 0) {
			// This is a quoted cookie as according to RFC2068, unescape...
			s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
		}

		try {
			// Replace server-side written pluses with spaces.
			// If we can't decode the cookie, ignore it, it's unusable.
			// If we can't parse the cookie, ignore it, it's unusable.
			s = decodeURIComponent(s.replace(pluses, ' '));
			return config.json ? JSON.parse(s) : s;
		} catch(e) {}
	}

	function read(s, converter) {
		var value = config.raw ? s : parseCookieValue(s);
		return $.isFunction(converter) ? converter(value) : value;
	}

	var config = $.cookie = function (key, value, options) {

		// Write

		if (value !== undefined && !$.isFunction(value)) {
			options = $.extend({}, config.defaults, options);

			if (typeof options.expires === 'number') {
				var days = options.expires, t = options.expires = new Date();
				t.setTime(+t + days * 864e+5);
			}

			return (document.cookie = [
				encode(key), '=', stringifyCookieValue(value),
				options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
				options.path    ? '; path=' + options.path : '',
				options.domain  ? '; domain=' + options.domain : '',
				options.secure  ? '; secure' : ''
			].join(''));
		}

		// Read

		var result = key ? undefined : {};

		// To prevent the for loop in the first place assign an empty array
		// in case there are no cookies at all. Also prevents odd result when
		// calling $.cookie().
		var cookies = document.cookie ? document.cookie.split('; ') : [];

		for (var i = 0, l = cookies.length; i < l; i++) {
			var parts = cookies[i].split('=');
			var name = decode(parts.shift());
			var cookie = parts.join('=');

			if (key && key === name) {
				// If second argument (value) is a function it's a converter...
				result = read(cookie, value);
				break;
			}

			// Prevent storing a cookie that we couldn't decode.
			if (!key && (cookie = read(cookie)) !== undefined) {
				result[name] = cookie;
			}
		}

		return result;
	};

	config.defaults = {};

	$.removeCookie = function (key, options) {
		if ($.cookie(key) === undefined) {
			return false;
		}

		// Must not alter options, thus extending a fresh object...
		$.cookie(key, '', $.extend({}, options, { expires: -1 }));
		return !$.cookie(key);
	};

}));

window.FileAPI = { staticPath: '/_assets/bower_components/fileapi/dist/' };

$(document).ready(function(){
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });

    actionSelect();
    ajax_edit_row();
    sort_rows();
    initSearchModule();

    $('.show-please').click(function () {
        var target = $(this).attr('data-target');
        $('.'+target).removeClass('uk-hidden');
    });

    /**
     * Функционал для formbuilder select
     * По нажатию на кнопку .new_list будет создан input с name= data-row-name кнопки
     * Позволяет вносить в списки кастомные значения
     * */
    $('.new_list').click(function () {
        $(this).hide();
        var row_name = $(this).attr('data-row-name');
        $('select[name='+row_name+']').before('<input class="uk-input" placeholder="Новое значение" type="text" name="' + row_name + '" value="">').remove();
    });
    $('.new_list_multiply').click(function () {
        $(this).hide();
        var row_name = $(this).attr('data-row-name');
        $('select[id=r-row-'+row_name+']').before('<input class="uk-input" placeholder="Новые значения через ;" type="text" name="' + row_name + '_new_list" value="">');
        $('select[id='+row_name+']').before('<input class="uk-input" placeholder="Новые значения через ;" type="text" name="' + row_name + '_new_list" value="">');
    });

    // получение максимального элемента массива
    function getMaxValue(array){
        var max = array[0];
        for (var i = 0; i < array.length; i++) {
            if (max < array[i]) max = array[i];
        }
        return max;
    }

    $('.uk-sortable-img-plugin').on('moved', function (e) {
        var positions = [];
        var max_position = 0;
        $(e.currentTarget).each(function (key, value) {
            $(value).find('div.uk-grid').each(function (k, v) {
                positions.push($(v).attr('data-id'));
                //
            });
        });
        max_position = getMaxValue(positions);

        $(e.currentTarget).each(function (key, value) {
            $(value).find('div.uk-grid').each(function (k, v) {
                $(v).find('input.position-image').val(--max_position);
            });
        });
    });

    $('button[type=submit]').click(function(){
        notify_show('message', '<i class="uk-icon-spin uk-icon-refresh"></i> Выполняется...');
    });

    $('input[name=anons_merge]').change(function() {
        if(this.checked) {
            $('textarea[name=anons_description]').prop('disabled', true);
            $('.form-group-anons_description').hide();
        }else{
            $('textarea[name=anons_description]').prop('disabled', false);
            $('.form-group-anons_description').show();
        }
    });

    if (typeof tinymce !== 'undefined') {
        tinymce.init({
            selector: "textarea:not(.not-editor)",
            height: 300,
            plugins: [
                "advlist link image imagetools lists charmap hr anchor pagebreak",
                "searchreplace visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
                "table directionality template paste importcss wordcount nonbreaking visualblocks visualchars codesample"
            ],
            relative_urls: false,
            extended_valid_elements : "table[cellpadding|cellspacing|class],td[class|colspan|rowspan],tr[class]",
            paste_remove_styles: true,
            paste_remove_spans: true,
            paste_auto_cleanup_on_paste: true,
            theme: 'silver',
            image_advtab: true,
            content_css: "/_assets/_front/_css/_min/uikit.min.css,/_assets/_admin/_css/tinymce.css",
            content_style: "table {width: 100%}",
            importcss_append: true,
            language_url : '/_assets/_admin/_js/tinymce.ru.js',
            toolbar_items_size: 'small',
            toolbar: "undo redo | bold italic codesample | alignleft aligncenter alignright | bullist numlist outdent " +
            "indent | link image media pastetext | forecolor backcolor | template | code | defis nonbreaking hr | photonews | typo | removeformat charmap",
            imagetools_toolbar: "rotateleft rotateright | flipv fliph | editimage imageoptions",
            fontsize_formats: '8pt 10pt 12pt 14pt 18pt 24pt 36pt',
            setup: function(editor) {
                editor.ui.registry.addButton('defis', {
                    text: '—',
                    title: 'Дефис',
                    onAction: function (_) {
                        editor.insertContent('—');
                    }
                });
                editor.ui.registry.addButton('photonews', {
                    text: 'Галерея',
                    title: 'Вставка шортката для галереи',
                    onAction: function (_) {
                        editor.insertContent('{Фото[news]=}');
                    }
                });
                editor.ui.registry.addButton('typo', {
                    text: 'Типограф',
                    title: 'Выделите текст в редакторе и нажмите для типографа',
                    onAction: function (_) {
                        var text = tinyMCE.activeEditor.selection.getContent({format : 'html'});
                        $.ajax({
                            type: "POST",
                            data: { text: text},
                            dataType: 'json',
                            url: "/admin/ajax/TypographLight",
                            success: function (data) {
                                tinyMCE.activeEditor.execCommand('mceReplaceContent',false, ''+data.text);
                            }
                        });
                    }
                });
            },
            templates: [
                {
                    title: 'Вставка фото-галереи :: Новости (Одно большое, другие маленькие)',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[news]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка фото-галереи без FancyBox :: Новости (Одно большое, другие маленькие)',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[nonFancy]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка фото-галереи :: Большие фото с описаниями',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[newsDescription]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка фото-галереи :: Одинаковые блоки',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[blocks]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка фото-галереи :: Большие фото',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[blocksBig]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка фото-галереи :: Сертификаты (небольшие фото с описаниями)',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[sert]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка фото-галереи :: Вывод одинаковыми блоками',
                    description: 'Вставьте после знака "=" имя группы картинок',
                    content: '{Фото[customШиринаxВысота]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка списка разделов сайта',
                    description: 'Вставьте после знака "=" URL категории (вставятся и потомки)',
                    content: '{Категории=}'},
                {
                    title: 'Вставка материалов из документации',
                    description: 'Вставьте после знака "=" URL категории',
                    content: '{Документы[default]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка прикрепленных к материалу файлов',
                    description: 'Вставьте после знака "=" имя группы файлов',
                    content: '{Файлы[default]='+ $('input[name=url]').val() +'}'},
                {
                    title: 'Вставка файлов из директории',
                    description: 'Вставьте после знака "=" имя папки в /public/files/',
                    content: '{Файлы[directory]=}'}
            ]
        });

        //Типограф
        $('.typo-action').click(function(){
            var text = tinyMCE.activeEditor.selection.getContent({format : 'html'});
            $.ajax({
                type: "POST",
                data: { text: text},
                dataType: 'json',
                url: "/admin/ajax/TypographLight",
                success: function (data) {
                    tinyMCE.activeEditor.execCommand('mceReplaceContent',false, ''+data.text);
                }
            });
        });
    }

    function typo() {
        $.ajax({
            type: "POST",
            data: { text: text},
            dataType: 'json',
            url: "/admin/ajax/TypographLight",
            success: function (data) {
                input.val(data.text);
            }
        });
    }

    $('.typo-target').click(function(){
        var input_target = $(this).attr('data-target');
        var input = $('input[name='+input_target+']');
        var text = input.val();
        $.ajax({
            type: "POST",
            data: { text: text},
            dataType: 'json',
            url: "/admin/ajax/TypographLight",
            success: function (data) {
                input.val(data.text);
            }
        });
    });

    $('.typo').focusout(function(){
        var input = $(this);
        var text = $(this).val();
        $.ajax({
            type: "POST",
            data: { text: text},
            dataType: 'json',
            url: "/admin/ajax/TypographLight",
            success: function (data) {
                input.val(data.text);
            }
        });
    });

    $('input[name=date], input.date').pickadate({
        monthSelector: true,
        yearSelector: true,
        formatSubmit: 'yyyy-mm-dd',
        firstDay: 1,
        monthsFull: [ 'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь' ],
        weekdaysShort: [ 'Вск', 'Пон', 'Вт', 'Ср', 'Чт', 'Пт', 'Суб' ],
        format: 'yyyy-mm-dd'
    });

    $('input.dateDay').pickadate({
        monthSelector: true,
        yearSelector: true,
        formatSubmit: 'yyyy-mm-dd 00:00:00',
        firstDay: 1,
        monthsFull: [ 'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь' ],
        weekdaysShort: [ 'Вск', 'Пон', 'Вт', 'Ср', 'Чт', 'Пт', 'Суб' ],
        format: 'yyyy-mm-dd 00:00:00'
    });


    /*
     * Универсальный обработчик для выделения блока как ссылки
     * Ищет внутри блока ссылку и присваивает ее всему блоку
     */
    $('.link_block').click(function(){window.location = $(this).find('a').attr('href');});
    $('.link_block_this').click(function(){window.location = $(this).attr('data-href');});

    /** Если присвоить класс change-form селекту в форме, то при клике будет происходить сабмит формы */
    $('select.change-form, input[type=checkbox].change-form').change(function(){
        $(this).parents('form').submit();
    });

    $('input[type=text].change-form').focusout(function(){
        $(this).parents('form').submit();
    });

    $('.btn-group_switch_ajax').find('button').click(function(){
        $(this).parent().find('button').addClass('uk-button-outline');
        $(this).removeClass('uk-button-outline');
        var value_where = $(this).attr('data-value_where');
        var row_where = $(this).attr('data-row_where');
        var value = $(this).attr('data-value');
        var row = $(this).attr('data-row');
        var table = $(this).attr('data-table');
        var data = { value_where: value_where, row_where: row_where, value: value, row: row, table: table };
        hidden_action('/admin/ajax/EditRow', data, false, false, false, true);
    });

    /** Conform alert. Уверены что хотите сделать это?) */
    $('.please_conform').on('click', function () {
        var href = $(this).attr('href');
        return confirm('Уверены?');
    });

    /**
     * Создание URL для страниц
     * @reference function change_url
     */
    $('input[name=title]').focusout(function(){
        var title = $(this).val();
        var form = $(this).closest('form');
        var url_input = $(form).find('input[name=url]').val();
        if(url_input !== undefined){
            if(url_input.length < 1 || (url_input === 'novyy-material' || url_input === 'novyy_material')){
                var table = $(this).attr('data-table');
                change_url_title(title, table, form);
            }
        }
    });
    $('.refresh-url').click(function () {
        var input = $('input[name=title]');
        var title = input.val();
        var form = $(this).closest('form');
        var table = input.attr('data-table');
        change_url_title(title, table, form);
    });
});

function initSearchModule() {
    var request = $.ajax({
        type: "GET",
        dataType: "json",
        url: '/admin/initSearchModule'
    });
    request.done(function (data) {
        $('.form-search-autocomplite').selectize({
            maxItems: 1,
            valueField: 'admin_url',
            labelField: 'title',
            searchField: 'title',
            persist: true,
            createOnBlur: false,
            create: false,
            allowEmptyOption: true,
            placeholder: 'Поиск по сайту',
            options: data,
            render: {
                item: function(item, escape) {
                    return '<div>' +
                        (item.title ? '<span class="title">' + escape(item.title.replace('&quot;', '').replace('&quot;', '')) + '</span>' : '') +
                        (item.category ? '<span class="category">/' + escape(item.category.replace('&quot;', '').replace('&quot;', '')) + '</span>' : '') +
                        (item.component ? '<span class="caption">компонент: ' + escape(item.component.replace('&quot;', '').replace('&quot;', '')) + '</span>' : '') +
                        '</div>';
                },
                option: function(item, escape) {
                    return '<div>' +
                        '<span class="uk-label">' + escape(item.title.replace('&quot;', '').replace('&quot;', '')) + '</span>' +
                        (item.category ? '<span class="caption">в разделе: ' + escape(item.category.replace('&quot;', '').replace('&quot;', '')) + '</span>' :'') +
                        (item.component ? '<span class="caption">компонент: ' + escape(item.component.replace('&quot;', '').replace('&quot;', '')) + '</span>' : '') +
                        '</div>';
                }
            },
            onChange: function (item) {
                window.location = item;
            }
        });
        $('#searchAdmin').removeClass('uk-hidden');
    });
    request.fail(function (jqXHR, status, statusText) {
        notify_show('error', statusText);
        return false;
    });
}

function ajax_edit_row() {
    /** Input для редактирования поля */
    $('.ajax_edit_row').on('change', function(){
        var value_where = $(this).attr('data-value_where');
        var row_where = $(this).attr('data-row_where');
        var value = $(this).val();
        var row = $(this).attr('name');
        if(row == undefined){
            row = $(this).attr('data-row');
        }
        var table = $(this).attr('data-table');
        var event = 'edit';
        var data = { value_where: value_where, row_where: row_where, value: value, row: row, event: event, table: table };
        //hidden_action(url, send_data, good_message, button, redirect_url, clearcache)
        hidden_action('/admin/ajax/EditRow', data, false, false, false, true);
    });
}


// получение максимального элемента массива
function getMaxValue(array){
    var max = array[0];
    for (var i = 0; i < array.length; i++) {
        if (max < array[i]) max = array[i];
    }
    return max;
}


/**
 * Сортировка материалов по весу через плагин uikit sortable
 */
function sort_rows() {
    $('.uk-sortable-img-plugin').on('moved', function (e) {
        var positions = [];
        var max_position = 0;
        $(e.currentTarget).each(function (key, value) {
            $(value).find('div.uk-grid').each(function (k, v) {
                positions.push($(v).attr('data-id'));
            });
        });
        max_position = getMaxValue(positions);

        $(e.currentTarget).each(function (key, value) {
            $(value).find('div.uk-grid').each(function (k, v) {
                $(v).find('input.position-image').val(--max_position);

                var data = {
                    value_where: $(v).find('input.position-image').attr('data-value_where'),
                    row_where: $(v).find('input.position-image').attr('data-row_where'),
                    value: max_position,
                    row: $(v).find('input.position-image').attr('data-row'),
                    event: 'edit',
                    table: $(v).find('input.position-image').attr('data-table')
                };
                hidden_action('/admin/ajax/EditRow', data, false, false, false, true);
            });
        });
    });
}


/**
 * Метод для выполнения ajax-операций
 * string       @param url              URL для вызова
 * array        @param send_data        Пересылаемые данные /false
 * bool/string  @param good_message     Кастомное сообщение об успехе операции /false
 * object       @param button           объект с кнопкой, на которую нажали /false
 * bool/string  @param redirect_url     Если передан string с адресом страницы, то будет выполнен редирект /false
 * bool         @param clearcache       Если true, то очистит кеш сайта /false
 */
function hidden_action(url, send_data, good_message, button, redirect_url, clearcache) {
    var request = $.ajax({
        data: send_data,
        type: "POST",
        dataType: "json",
        url: url
    });
    request.done(function (msg) {
        if(msg.status === 'blank'){
            return false;
        }

        if(msg.status === 'error'){
            notify_show('error', msg.message);
            return false;
        }

        if(msg.status === 'success'){
            if ((good_message !== false) && (good_message !== undefined)) {
                notify_show('success', good_message);
            }else{
                notify_show('success', msg.message);
            }
        }

        if (clearcache === true) {
            clear_cache();
        }
        if ((button !== false) && (redirect_url !== undefined)) {
            $(button).removeClass('action_button').removeAttr('disabled');
        }
        if ((redirect_url !== false) && (redirect_url !== undefined)) {
            window.location = redirect_url;
        }
        return true;
    });
    request.fail(function (jqXHR, status, statusText) {
        notify_show('error', statusText);
        if ((button !== false) && (redirect_url !== undefined)) {
            $(button).removeClass('action_button').removeAttr('disabled');
        }
        return false;
    });
}

/**
 * Уведомления в сплывающих окнах от процессов
 * string @param type  Тип события (good, error)
 * string @param message   Сообщение на вывод
 */
function notify_show(type, message) {
    if(type === 'error'){
        UIkit.notification({
            message : '<i uk-icon="icon: warning"></i> '+ message,
            status  : 'danger',
            timeout : 0,
            pos     : 'top-center'
        });
    }else{
        if(type === 'message'){
            type = 'info';
        }
        UIkit.notification({
            message : '<i uk-icon="icon: check"></i> '+ message,
            status  : type,
            timeout : 3000,
            pos     : 'top-right'
        });
    }
}

/** Purge site cache function */
function clear_cache() {
    hidden_action('/admin/ajax/ClearCache', false, false, false, false, false);
}

/**
 * Создание url для страницы и вставка значения в input[name=url]
 * string @param title  Текст для транслитерации (обычно input[name=title])
 * string @param table  Имя таблицы для проверки уникальности url (опционально, можно передать пустое значение)
 * string @param form   Форма в которой проводятся операции
 */
function change_url_title(title, table, form){
    $.ajax({
        type: "POST",
        data: { text: title, table: table},
        dataType: 'json',
        url: "/admin/ajax/Translit",
        success: function (data) {
            var url_input = $(form).find('input[name=url]');
            var active_input = $(form).find('input[name=active]');
            if (data.message) {
                url_input.val(data.message);
                active_input.attr('checked', 'checked');
                $('input[name=gallery_img]').val(data.message);
                $('input[name=gallery_file]').val(data.message);
                notify_show('info', 'Материалу будет присвоен url: '+data.message);
            }
        }
    });
}

/**
 * Массовое выделение элементов для их удаления
 * string @param data-id        ID элемента в БД
 * string @param data-target    ID формы производящей действие
 */
function actionSelect() {
    $('.actionSelect').click(function () {
        $(this).toggleClass('uk-active');
        var id = $(this).attr('data-id');
        var target = $(this).attr('data-target');
        var formAction = $('form#'+ target);
        var select = $(formAction).find('select[name="ids[]"]');
        if($(select).find('option[value='+ id +']:selected').val()){
            $(select).find('option[value='+ id +']').prop('selected', false);
        }else{
            $(select).find('option[value='+ id +']').prop('selected', true);
        }

        var countSelected = $(select).find('option:selected').length;
        $(formAction).find('span').html(countSelected);
        if(countSelected > 0){
            $(formAction).removeClass('uk-hidden');
            $(formAction).parentsUntil('tr').slideDown('fast');
        }else{
            $(formAction).addClass('uk-hidden');
            $(formAction).parentsUntil('tr').slideUp('fast');
        }
    });
}
$(document).ready(function() {
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });

    if (typeof FileAPI.support !== 'undefined') {
        FileApiInit('images');
        FileApiInit('files');
    }
    ajaxBindActions();
});

/**
 * Получение загруженных медиа-файлов
 * @param model_id
 * @param model_type
 * @param type    images|files
 */
function getUploadedMedia(model_id, model_type, type) {
    $.ajax({
        data: {model_id: model_id, model_type: model_type, type: type},
        type: "POST",
        url: "/admin/ajax/GetUploadedMedia",
        success: function (data) {
            if(type === 'images'){
                $('#uploadedImages').html(data);
            }
            if(type === 'files'){
                $('#uploadedFiles').html(data);
            }
            ajaxBindActions();
        },
        error: function () {
            if(type === 'images'){
                alert('Не удалось загрузить прикрепленные фотографии');
            }
            if(type === 'files'){
                alert('Не удалось загрузить прикрепленные фотографии');
            }
        }
    });
}

/**
 * Инициализация загрузчика медиа-файлов
 * @param type  images|files
 */
function FileApiInit(type) {
    var choose = document.getElementById(type);
    if(type === 'images'){
        if (FileAPI.support.dnd) {
            $('#drag-n-drop-image').show();
            $('#choose').dnd(function (over) {
                $('.js-fileapi-wrapper').toggleClass('dragged');
            }, function (files) {
                startUploadImages(files);
            });
        }
        FileAPI.event.on(choose, 'change', function (evt) {
            var files = FileAPI.getFiles(evt); // Retrieve file list
            startUploadImages(files);
        });
    }
    if(type === 'files'){
        if (FileAPI.support.dnd) {
            $('#drag-n-drop-file').show();
            $('#choose_file').dnd(function (over) {
                $('.js-fileapi-wrapper').toggleClass('dragged');
            }, function (files) {
                startUploadFiles(files);
            });
        }

        FileAPI.event.on(choose, 'change', function (evt) {
            var files = FileAPI.getFiles(evt); // Retrieve file list
            startUploadFiles(files);
        });
        FileAPI.event.on(choose, 'change', function (evt) {
            var files = FileAPI.getFiles(evt); // Retrieve file list
            startUploadFiles(files);
        });
    }
}

function startUploadImages(files) {
    var resize_original = $('input[name=resize_original]:checked').val();

    FileAPI.filterFiles(files, function (file, info/**Object*/) {
        if (/^image/.test(file.type)) {
            return info.width >= 30 && info.height >= 30
                && (file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif');
        }
        return false;
    }, function (files/**Array*/, rejected/**Array*/) {
        $.each(rejected, function (key, value) {
            UIkit.notification({
                message: '<span uk-icon="warning"></span> Файл ' + value.name + ' отклонен',
                status: 'danger',
                timeout: 0,
                pos: 'top-right'
            });
        });
        if (files.length) {
            $('.uk-progress-upload-image').show();

            // Загружаем файлы
            FileAPI.upload({
                url: '/admin/ajax/UploadImage',
                files: {images: files},
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                },
                data: {
                    model_id: $('#uploadedImages').attr('data-model_id'),
                    model_type: $('#uploadedImages').attr('data-model_type'),
                    resize_original: resize_original,
                    resize_original_px: $('input[name=resize_original_px]').val(),
                    gallery: $('input[name=gallery_img]').val()
                },
                progress: function (evt/**Object*/, file/**Object*/, xhr/**Object*/, options/**Object*/) {
                    var bar = document.getElementById('js-progressbar-upload-image');
                    var animate = setInterval(function () {
                        bar.value = evt.loaded / evt.total * 100;
                        if (bar.value >= bar.max) {
                            clearInterval(animate);
                        }
                    }, 1000);
                },
                complete: function (err, xhr) {
                    var answer = $.parseJSON(xhr.responseText);
                    if (!err) {
                        // All files successfully uploaded.
                        getUploadedMedia($('#uploadedImages').attr('data-model_id'), $('#uploadedImages').attr('data-model_type'), 'images');
                        $('#images').hide();
                        var countUploadedImages = parseInt($('.countUploadedImages').html());
                        $('.countUploadedImages').html(++countUploadedImages);
                        UIkit.notification({
                            message: '<i uk-icon="icon: check"></i> ' + answer.message,
                            status: 'info',
                            timeout: 3000,
                            pos: 'top-right'
                        });
                    } else {
                        UIkit.notification({
                            message: '<i uk-icon="icon: warning"></i> Ошибка: ' + answer.message,
                            status: 'danger',
                            timeout: 0,
                            pos: 'top-right'
                        });
                    }
                    $('.uk-progress-upload-image').hide();
                }
            });
        }
    });
}

function startUploadFiles(files) {
    if (files.length) {
        $('.uk-progress-upload-file').show();

        // Загружаем файлы
        FileAPI.upload({
            url: '/admin/ajax/UploadFile',
            files: {files: files},
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            data: {
                model_id: $('#uploadedFiles').attr('data-model_id'),
                model_type: $('#uploadedFiles').attr('data-model_type'),
                gallery: $('input[name=gallery_file]').val()
            },
            progress: function (evt/**Object*/, file/**Object*/, xhr/**Object*/, options/**Object*/) {
                var bar = document.getElementById('js-progressbar-upload-file');
                var animate = setInterval(function () {
                    bar.value = evt.loaded / evt.total * 100;
                    if (bar.value >= bar.max) {
                        clearInterval(animate);
                    }
                }, 1000);
            },
            complete: function (err, xhr) {
                var answer = $.parseJSON(xhr.responseText);
                if (!err) {
                    // All files successfully uploaded.
                    getUploadedMedia($('#uploadedFiles').attr('data-model_id'), $('#uploadedFiles').attr('data-model_type'), 'files');
                    var countUploadedFiles = parseInt($('.countUploadedFiles').html());
                    $('.countUploadedFiles').html(++countUploadedFiles);
                    UIkit.notification({
                        message: '<i uk-icon="icon: check"></i> ' + answer.message,
                        status: 'info',
                        timeout: 3000,
                        pos: 'top-right'
                    });
                } else {
                    UIkit.notification({
                        message: '<i uk-icon="icon: warning"></i> Ошибка: ' + answer.message,
                        status: 'danger',
                        timeout: 0,
                        pos: 'top-right'
                    });
                }
                $('.uk-progress-upload-file').hide();
            }
        });
    }
}

function ajaxBindActions(){
    $('.btn-upload-remove').click(function(){
        var id = $(this).attr('data-id');
        var model = $(this).attr('data-model');
        var model_id = $(this).attr('data-model_id');
        var type = $(this).attr('data-type');
        $.ajax({
            data: {id: id, model: model, model_id: model_id, type: type},
            type: "POST",
            url: "/admin/ajax/DeleteUploadedMedia",
            success: function () {
                if(type === 'images'){
                    $('#image-'+ id).hide('slow');
                    var countUploadedImages = parseInt($('.countUploadedImages').html());
                    $('.countUploadedImages').html(--countUploadedImages);
                    notify_show('success', 'Фото удалено');
                }
                if(type === 'files'){
                    $('#file-'+ id).hide('slow');
                    var countUploadedFiles = parseInt($('.countUploadedFiles').html());
                    $('.countUploadedFiles').html(--countUploadedFiles);
                    notify_show('success', 'Файл удален');
                }
            },
            error: function () {
                if(type === 'images'){
                    notify_show('danger', 'Фото не удалено');
                }
                if(type === 'files'){
                    notify_show('danger', 'Файл не удален');
                }
            }
        });
    });

    $('.ajax_edit_media').change(function(){
        var id = $(this).attr('data-id');
        var block = $(this).parentsUntil('.plugin-item');
        var alt = $(block).find('.description-file').val();
        var gallery = $(block).find('.param-file').val();
        var position = $(block).find('.position-file').val();
        $.ajax({
            data: {alt: alt, gallery: gallery, position: position, id: id},
            type: "POST",
            url: "/admin/ajax/CustomProperties",
            success: function () {
                notify_show('success', 'Данные сохранены');
            },
            error: function () {
                notify_show('danger', 'Дополнительные параметры не сохранены');
            }
        });
    });

    $('.clearMedia').click(function () {
        var model = $(this).attr('data-model_type');
        var model_id = $(this).attr('data-model_id');
        var type = $(this).attr('data-type');
        $.ajax({
            data: {model: model, model_id: model_id, type: type},
            type: "POST",
            url: "/admin/ajax/DeleteAllUploadedMediaByType",
            success: function () {
                if(type === 'images'){
                    $('#uploadedImages').html('');
                    $('.countUploadedImages').html(0);
                    notify_show('success', 'Все фото материала удалены');
                }
                if(type === 'files'){
                    $('#uploadedFiles').html('');
                    $('.countUploadedFiles').html(0);
                    notify_show('success', 'Все файлы материала удалены');
                }
            },
            error: function () {
                if(type === 'images'){
                    notify_show('danger', 'Фотографии удалить не удалось');
                }
                if(type === 'files'){
                    notify_show('danger', 'Файлы удалить не удалось');
                }
            }
        });
    });
}
$(document).ready(function() {
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });

    function create_new_column() {
        $('.wizard-db-colomns').change(function () {
            if($(this).val() === 'create-column'){
                var column = $(this).find(':selected').attr('data-column');
                if(column !== undefined){
                    $.ajax({
                        type: "GET",
                        url: '/admin/wizard/createMigration',
                        dataType: 'json',
                        data: { column: column },
                        success: function(data)
                        {
                            if(data.status === 'success'){
                                notify_show('success', data.message);
                                notify_show('success', '! Выберите в поле пункт с названием нового поля !');
                                $('.wizard-db-colomns')
                                    .append($("<option></option>")
                                        .attr("value", column)
                                        .text(column))
                                    .prop('selected', true);
                            }else{
                                notify_show('error', data.message);
                            }
                        },
                        error: function()
                        {
                            alert('Ошибка выполнения запроса');
                        }
                    });
                }else{
                    alert('Column не определена');
                }
            }
        });
    }


    function triggerUpdateCell() {
        notify_show('message', 'Доступно редактирование таблицы');
        $('.tab-content-wizard').css('opacity', '1');
        create_new_column();
        $('input.cell_value').focusout(function () {
            var cell = $(this).attr('data-coordinate');
            var value = $(this).val();
            var old_value = $(this).attr('data-oldvalue');
            var sheet = $(this).attr('data-sheet');
            if(cell !== undefined){
                if(old_value !== value){
                    $.ajax({
                        type: "GET",
                        url: '/admin/wizard/updateXLSX',
                        dataType: 'json',
                        data: { cell: cell, value: value, sheet: sheet },
                        success: function(data)
                        {
                            if(data.status === 'success'){
                                notify_show('success', data.message);
                            }else{
                                notify_show('error', data.message);
                            }
                        },
                        error: function()
                        {
                            alert('Ошибка выполнения запроса');
                        }
                    });
                }
            }else{
                notify_show('notice', 'Ячейка не изменилась');
            }
        });

        $('select.cell_value').change(function () {
            var cell = $(this).attr('data-coordinate');
            var value = $(this).val();
            var old_value = $(this).attr('data-oldvalue');
            var sheet = $(this).attr('data-sheet');
            if(cell !== undefined){
                if(old_value !== value){
                    $.ajax({
                        type: "GET",
                        url: '/admin/wizard/updateXLSX',
                        dataType: 'json',
                        data: { cell: cell, value: value, sheet: sheet },
                        success: function(data)
                        {
                            if(data.status === 'success'){
                                notify_show('success', data.message);
                            }else{
                                notify_show('error', data.message);
                            }
                        },
                        error: function()
                        {
                            alert('Ошибка выполнения запроса');
                        }
                    });
                }
            }else{
                notify_show('notice', 'Ячейка не изменилась');
            }
        });
    }

    //Загрузка листов xlsx
    $('.load_sheet').each(function () {
        var sheet = $(this).attr('data-sheet');
        if(sheet === '0'){
            $('.tab-content-wizard').css('opacity', '.3');
            notify_show('message', 'Выполняется разбор прайса');
            notify_show('message', 'Редактирование таблицы пока не доступно');
        }
        if(sheet !== undefined){
            loadSheet(sheet, $(this));
        }
    });
    function loadSheet(sheet, element){
        $('.sheet'+ sheet).addClass('loadSheet').removeClass('finishSheet').removeClass('errorSheet');
        $.ajax({
            type: "GET",
            url: '/admin/wizard/sheetParse/'+ sheet,
            dataType: 'html',
            success: function(data)
            {
                element.addClass('data_sheet');
                $('#sheet_content'+ sheet).html(data);
                //notify_show('success', 'Страница '+ sheet +' разобрана');
                $('.sheet'+ sheet).removeClass('loadSheet').addClass('finishSheet');
                if($('.data_sheet').length === $('.load_sheet').length){
                    triggerUpdateCell();
                }
            },
            error: function(data)
            {
                $('#sheet_content'+ sheet).html(data);
                $('.sheet'+ sheet).removeClass('loadSheet').addClass('errorSheet');
                notify_show('error', 'Страница '+ sheet +' не разобрана');
            }
        });
    }

    //Импорт прайса
    var current_category_import;
    var current_level_import;
    var current_title_import;

    $('.start_import').click(function () {
        $.ajax({
            type: "GET",
            url: '/admin/wizard/clear',
            dataType: 'json',
            data: [],
            success: function()
            {
                notify_show('success', 'Каталог очищен');
                importXLS();
            },
            error: function()
            {
                notify_show('error', 'Каталог не очищен, импорт не запущен');
            }
        });
    });

    function importXLS() {
        var sheet = $('.import_row').parentsUntil('.load_sheet').parent().attr('data-sheet');
        var last_sheet = 0;
        var count_rows = $('.import_row').length;

        if(count_rows < 1){
            sheet = last_sheet;
        }

        var progress = $('#sheet'+ sheet).find('.uk-progress');
        var progress_bar = $('#sheet'+ sheet).find('.uk-progress-bar');
        var progress_all_rows = parseInt($('.all_rows').html());
        var progress_percent = parseInt(100-(count_rows * 100)/progress_all_rows);

        progress.addClass('uk-progress-striped').addClass('uk-active');

        if(count_rows > 0){
            var form = $('.import_row:first');
            var tr = form.find('tr');

            progress_bar
                .css('width', progress_percent +'%')
                .find('.imported_rows').html(progress_all_rows - count_rows +' '+ progress_percent +'%');

            $.ajax({
                type: "POST",
                url: '/admin/wizard/importrow',
                dataType: 'json',
                data: form.serialize() +'&current_category='+ current_category_import +'&current_level='+ current_level_import +'&current_title='+ current_title_import, // serializes the form's elements.
                success: function(data)
                {
                    tr.addClass('uk-alert-success');
                    form.removeClass('import_row');
                    current_category_import = data.category_id;
                    current_level_import = data.category_level;
                    current_title_import = data.category_title;
                    importXLS();
                },
                error: function()
                {
                    tr.addClass('uk-alert-danger');
                    notify_show('error', 'Импорт не завершен. Ошибка внесения данных');
                    progress_bar.css('width', progress_percent +'%');
                    progress.addClass('uk-progress-danger').removeClass('uk-progress-striped').removeClass('uk-active');
                }
            });
        }else{
            progress_bar
                .css('width', '100%')
                .find('.imported_rows').html(progress_all_rows +' 100%');
            progress.addClass('uk-progress-success').removeClass('uk-progress-striped').removeClass('uk-active');
            notify_show('success', 'Импорт завершен');
        }
    }
});